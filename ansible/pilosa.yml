---
- name: basics
  hosts: all
  strategy: free
  remote_user: ubuntu
  gather_facts: no
  tasks:
    - name: install software
      become: yes
      become_method: sudo
      apt:
        name: "{{ packages }}"
        update_cache: yes
      vars:
        packages:
          - make
          - git
          - htop
          - jq
    - name: open firewall port 10101
      become: yes
      become_method: sudo
      iptables:
        chain: INPUT
        protocol: tcp
        destination_port: 10101
        jump: ACCEPT
        action: insert
    - name: open firewall port 14000 protocol tcp
      become: yes
      become_method: sudo
      iptables:
        chain: INPUT
        protocol: tcp
        destination_port: 14000
        jump: ACCEPT
        action: insert
    - name: open firewall port 14000 protocol udp
      become: yes
      become_method: sudo
      iptables:
        chain: INPUT
        protocol: udp
        destination_port: 14000
        jump: ACCEPT
        action: insert
- name: install go
  hosts: all
  strategy: free
  remote_user: ubuntu
  become: yes
  become_method: sudo
  gather_facts: no
  tasks:
  - include_role:
      name: ansible-go
    vars:
      go_tarball: "go1.11.linux-amd64.tar.gz"
      go_tarball_checksum: "sha256:b3fcf280ff86558e0559e185b601c9eade0fd24c900b4c63cd14d1d38613e499"
      go_version_target: "go version go1.11 linux/amd64"
      set_go_path: true
- name: install pilosa
  hosts: all
  strategy: free
  remote_user: ubuntu
  gather_facts: no
  tasks:
    - name: get instance_metadata
      shell: curl -ss -L http://169.254.169.254/opc/v1/instance/metadata/
      register: instance_metadata
    - name: get private_ip
      shell: hostname -I | cut -d" " -f1
      register: private_ip
    - name: set facts
      set_fact:
        instance_metadata: "{{ instance_metadata.stdout | from_json }}"
        private_ip: "{{ private_ip.stdout }}"
    - name: pull pilosa
      git:
        dest: /home/ubuntu/go/src/github.com/pilosa/pilosa
        repo: "{{ repo }}"
        version: "{{ version }}"
      vars:
        repo: https://github.com/pilosa/pilosa.git
        version: master
      notify:
        - restart pilosa
    - name: install pilosa build deps
      command: bash -c 'source /etc/profile.d/go-bin.sh; source /etc/profile.d/go-path.sh; make install-build-deps'
      args:
        chdir: /home/ubuntu/go/src/github.com/pilosa/pilosa
    - name: install pilosa
      command: bash -c 'source /etc/profile.d/go-bin.sh; source /etc/profile.d/go-path.sh; make install'
      args:
        chdir: /home/ubuntu/go/src/github.com/pilosa/pilosa
    - name: update pilosa systemd service
      become: yes
      become_method: sudo
      template:
        src: "pilosa.service.j2"
        dest: "/etc/systemd/system/pilosa.service"
        mode: 0755
      vars:
          pilosa_arguments: -c /etc/pilosa.conf
      notify:
        - restart pilosa
    - name: update pilosa config
      become: yes
      become_method: sudo
      template:
        src: "pilosa.conf.j2"
        dest: "/etc/pilosa.conf"
        mode: 0755
      vars:
          gossip_seeds:
      notify:
        - restart pilosa
    - name: update logging config
      become: yes
      become_method: sudo
      copy:
        content: |
            if $programname == 'pilosa' then /var/log/pilosa/pilosa.log
            & stop
        dest: "/etc/rsyslog.d/pilosa.conf"
        mode: 0644
      notify:
        - restart rsyslog
  handlers:
    - name: restart pilosa
      become: yes
      become_method: sudo
      systemd:
        name: pilosa
        state: restarted
        daemon_reload: yes
    - name: restart rsyslog
      become: yes
      become_method: sudo
      systemd:
        name: rsyslog
        state: restarted
