* Taxi Cab cross provider benchmarks
Goal: Run a standardized set of queries over the billion taxi ride dataset on same sized clusters of VMs.

** methodology
1. Clone github.com/pilosa/infrastructure and change into it.
2. =cd terraform/examples=
3. Copy a *-taxi-template directory to a descriptively named dir e.g. =cp -r oci-taxi-template oci-taxi-DenseIO2.16-3node=
4. Change into that new directory. e.g. =cd oci-taxi-DenseIO2.16-3node=
5. Copy vars.tfvars.example to vars.tfvars and change stuff. Some of the clouds
   require certain things (e.g. resource groups, network subnets, etc.) to be
   created beforehand.
6. Create a new workspace: e.g. =terraform workspace new taxi-DenseIO16-3node=
7. =make apply=
8. =make provision=
9. =make halfurls=
10. =make halftaxi=
11. Wait for taxi load to complete - use =make halftaxi-log= to check status.
12. =export AGENT_IP=$(make output | jq .agent_public_ip.value)=
13. Optional: Use =make provision-demo-taxi HOSTS=$AGENT_IP,= to provision the
    demo (nice for generating big queries). Note the comma after agent_ip
14. =make bench= This will run the benchmarks and collect the results in this directory.
15. Your results are now in a file named like =rawresults-$(CLOUD)-$(SHAPE)-$(COUNT)-$(USERNAME)-$(shell date -u +%Y%M%dT%H%M).csv=
16. =make bandwidth= will run memory bandwidth microbenchmarks. Use =make bw-log= to track progress.
17. =make bw-results= fetches the bandwidth results and appends them to your other results.
18. You can upload the results directly to a data.world project - you'll have to
    edit the =upload= target in the taxi-include Makefile if you want to use a
    data.world project other than the default:
    - Download your API token from https://data.world/settings/advanced
    - Place it in a file in this directory called =data.world-api-token=. 
    - Run =make upload= from each particular configuration's directory.



